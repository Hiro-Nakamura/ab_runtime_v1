version: "3.2"
services:
  #nginx setup
  web:
    image: nginx
    ports:
      - "<%=port%>:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./nginx/html
        target: /usr/share/nginx/html
      - type: bind
        source: ./assets
        target: /data/assets
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ./nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./nginx/ssl
        target: /etc/ssl/certs
    depends_on:
      - api_sails
  #/nginx

  #db: use Maria DB as our backend DB
  db:
    image: mariadb
    ports:
      - "<%=portDB%>:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /secret/password
    volumes:
      - type: bind
        source: ./mysql/conf.d/my.cfg
        target: /etc/mysql/conf.d/my.cfg
      - type: bind
        source: ./mysql/init
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./mysql/data
        target: /var/lib/mysql
      # - type: bind
      #   source: ./mysql/conf.d
      #   target: /etc/mysql/conf.d
      - type: bind
        source: ./mysql/key
        target: /key
      - type: bind
        source: ./mysql/password
        target: /secret/password
    # on windows: use this command. (be sure to clear out mysql/data folder)
    # command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON
  #/db

  # include ArrangoDB for AB definitions
  arangodb:
    image: arangodb
    ports:
      - "<%=arangoPort%>:8529"
    environment:
      ARANGO_ROOT_PASSWORD: "<%=arangoPassword%>"
    volumes:
      - type: bind
        source: ./arango/data
        target: /var/lib/arangodb3
      - type: bind
        source: ./arango/apps
        target: /var/lib/arangodb3-apps
      - type: bind
        source: ./arango/init
        target: /docker-entrypoint-initdb.d

  #api_sails: the AppBuilder Developer Container
  api_sails:
    image: skipdaddy/install-ab:developer_v2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "1337:1337"
      - "9229:9229"
    volumes:
      - type: bind
        source: ./app
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      # - type: bind
      #   source: ./developer/app_builder
      #   target: /app/node_modules/app_builder
    command: ["node", "--inspect", "--max-old-space-size=2048", "--stack-size=2048", "app.js"]
  #/api_sails
